{
  "robustness": {
    "resilience_to_attacks": {
      "weight": 0.3,
      "metrics": {
        "certified_robustness": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "performance/test_clever"
            }
          ],
          "operation": "get_value",
          "type": "ranges",
          "ranges": [0, 0.2 , 0.4 , 0.6 , 0.8 , 1.0 , 1.2 , 1.4 , 1.6 , 1.8 , 2.0 , 2.2 , 2.4 , 2.6 , 2.8 , 3.2 , 3.4 , 3.6 , 3.8 , 4.0],
          "description": "Cross Lipschitz Extreme Value for nEtwork Robustness: attack-agnostic estimator of the lower bound Î²L",
          "weight": 1
        }
      }
    },
    "algorithm_robustness": {
      "weight": 0.5,
      "metrics": {
        "performance": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "performance/test_acc_avg"
            }
          ],
          "operation": "get_value",
          "type": "true_score",
          "description": "Average test accuracy of the global model on clients test data.",
          "weight": 0.8
        },
        "personalization": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "configuration/personalization"
            }
          ],
          "operation": "get_value",
          "type": "true_score",
          "description": "The use of personalized FL algorithm.",
          "weight": 0.2
        }
      }
    },
    "client_reliability": {
      "weight": 0.2,
      "metrics": {
        "scale": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "participants/client_num"
            }
          ],
          "operation": "get_value",
          "type": "ranges",
          "direction": "desc",
          "ranges": [
            10,
            100,
            1000,
            10000,
            100000,
            1000000,
            10000000,
            100000000,
            1000000000,
            10000000000
          ],
          "description": "The number of clients in the model.",
          "weight": 1
        }
      }
    }
  },
  "privacy": {
    "technique": {
      "weight": 0.4,
      "metrics": {
        "differential_privacy": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "configuration/differential_privacy"
            }
          ],
          "operation": "get_value",
          "type": "true_score",
          "description": "The use of differential privacy.",
          "weight": 1
        }
      }
    },
    "uncertainty": {
      "weight": 0.4,
      "metrics": {
        "entropy": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "participants/client_num"
            }
          ],
          "operation": "get_entropy",
          "type": "true_score",
          "description": "The measure of uncertainty in identifying a client.",
          "weight": 1
        }
      }
    },
    "indistinguishability": {
      "weight": 0.2,
      "metrics": {
        "global_privacy_risk": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "configuration/differential_privacy"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/dp_epsilon"
            },
            {
              "source": "factsheet",
              "field_path": "participants/client_num"
            }
          ],
          "operation": "get_global_privacy_risk",
          "type": "true_score",
          "direction": "desc",
          "description": "A worst-case approximation of the maximal risk for distinguishing two clients.",
          "weight": 1
        }
      }
    }
  },
  "fairness": {
    "selection_fairness": {
      "weight": 0.4,
      "metrics": {
        "selection_variation": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "fairness/selection_cv"
            }
          ],
          "operation": "get_value",
          "type": "true_score",
          "direction": "desc",
          "description": "Variation in selection rate among the clients.",
          "weight": 1
        }
      }
    },
    "performance_fairness": {
      "weight": 0.4,
      "metrics": {
        "accuracy_variation": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "fairness/test_acc_cv"
            }
          ],
          "operation": "get_value",
          "type": "true_score",
          "direction": "desc",
          "description": "Variation of global model performance among the clients.",
          "weight": 1
        }
      }
    },
    "class_distribution": {
      "weight": 0.2,
      "metrics": {
        "class_imbalance": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "fairness/class_imbalance"
            }
          ],
          "operation": "get_value",
          "type": "true_score",
          "direction": "desc",
          "description": "Variation of the sample size per class.",
          "weight": 1
        }
      }
    }
  },
  "explainability": {
    "interpretability": {
      "weight": 0.4,
      "metrics": {
        "algorithmic_transparency": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "configuration/training_model"
            }
          ],
          "operation": "get_value",
          "type": "score_mapping",
          "score_map": {
            "RandomForestClassifier": 4,
            "KNeighborsClassifier": 3,
            "SVC": 2,
            "GaussianProcessClassifier": 3,
            "DecisionTreeClassifier": 5,
            "MLPClassifier": 1,
            "AdaBoostClassifier": 3,
            "GaussianNB": 3.5,
            "QuadraticDiscriminantAnalysis": 3,
            "LogisticRegression": 4,
            "LinearRegression": 3.5,
            "Sequential": 1,
            "CNN": 1
          },
          "description": "Mapping of Learning techniques to the level of explainability based on on literature research and qualitative analysis of each learning technique.",
          "weight": 0.6
        },
        "model_size": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "configuration/trainable_param_num"
            }
          ],
          "operation": "get_value",
          "type": "ranges",
          "direction": "desc",
          "ranges": [
            10,
            25,
            50,
            100
          ],
          "description": "Ranges of how to map model size to a score from 1-5.",
          "weight": 0.4
        }
      }
    },
    "post_hoc_methods": {
      "weight": 0.6,
      "metrics": {
        "feature_importance": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "performance/test_feature_importance_cv"
            }
          ],
          "operation": "get_value",
          "type": "true_score",
          "description": "Variation of feature importance scores of all the features.",
          "weight": 1
        }
      }
    }
  },
  "accountability": {
    "factsheet_completeness": {
      "weight": 1,
      "metrics": {
        "project_specs": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "project/overview"
            },
            {
              "source": "factsheet",
              "field_path": "project/purpose"
            },
            {
              "source": "factsheet",
              "field_path": "project/background"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "Specifications of the project.",
          "weight": 0.1
        },
        "participants": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "participants/client_num"
            },
            {
              "source": "factsheet",
              "field_path": "participants/sample_client_rate"
            },
            {
              "source": "factsheet",
              "field_path": "participants/client_selector"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "Participants information.",
          "weight": 0.2
        },
        "data": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "data/provenance"
            },
            {
              "source": "factsheet",
              "field_path": "data/preprocessing"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "Meta data about the data.",
          "weight": 0.2
        },
        "configuration": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "configuration/optimization_algorithm"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/training_model"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/personalization"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/differential_privacy"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/dp_epsilon"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/trainable_param_num"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/total_round_num"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/learning_rate"
            },
            {
              "source": "factsheet",
              "field_path": "configuration/local_update_steps"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "FL model configurations.",
          "weight": 0.2
        },
        "performance": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "performance/test_loss_avg"
            },
            {
              "source": "factsheet",
              "field_path": "performance/test_acc_avg"
            },
            {
              "source": "factsheet",
              "field_path": "performance/test_feature_importance_cv"
            },
            {
              "source": "factsheet",
              "field_path": "performance/test_clever"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "Performance evaluation results.",
          "weight": 0.1
        },
        "fairness": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "fairness/test_acc_cv"
            },
            {
              "source": "factsheet",
              "field_path": "fairness/selection_cv"
            },
            {
              "source": "factsheet",
              "field_path": "fairness/class_imbalance"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "Fairness metrics results.",
          "weight": 0.1
        },
        "system": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "system/avg_time_minutes"
            },
            {
              "source": "factsheet",
              "field_path": "system/avg_model_size"
            },
            {
              "source": "factsheet",
              "field_path": "system/avg_upload_bytes"
            },
            {
              "source": "factsheet",
              "field_path": "system/avg_download_bytes"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "System usage information.",
          "weight": 0.1
        }
      }
    }
  },
  "architectural_soundness": {
    "client_management": {
      "weight": 0.4,
      "metrics": {
        "client_selector": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "participants/client_selector"
            }
          ],
          "operation": "check_properties",
          "type": "property_check",
          "description": "The use of a client selector.",
          "weight": 1
        }
      }
    },
    "optimization": {
      "weight": 0.6,
      "metrics": {
        "algorithm": {
          "inputs": [
            {
              "source": "factsheet",
              "field_path": "configuration/optimization_algorithm"
            }
          ],
          "operation": "get_value",
          "type": "score_ranking",
          "direction": "asc",
          "score_map": {
            "FedAvg": 0.8493,
            "FedOpt": 0.8492,
            "FedProx": 0.8477,
            "FedBN": 0.8548,
            "pFedMe": 0.8765,
            "Ditto": 0.8661,
            "FedEM": 0.8479
          },
          "description": "The choice of a suitable optimization algorithm.",
          "weight": 1
        }
      }
    }
  }
}